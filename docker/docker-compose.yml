version: "3.9"

services:
#   langflow:
#     user: root
#     image: langflowai/langflow:latest 
#     pull_policy: always  
#     ports:
#       - "7860:7860"
#     volumes:
#       - data_volume:/app/data/langflow  # Langflow data in subdirectory
#     depends_on:
#       - qdrant
#       - dagster-webserver
#       - minio
#     environment:
#       - LANGFLOW_DATABASE_URL=sqlite:///data/langflow/langflow.db # Updated path
#       - QDRANT_URL=qdrant
#       - QDRANT_PORT=6333
#       - QDRANT_COLLECTION=aqyn
#       - LANGFLOW_LOAD_FLOWS_PATH=/tmp
#       - LANGFLOW_S3_ENDPOINT=minio:9000
#       - LANGFLOW_S3_ACCESS_KEY_ID=aqyn
#       - LANGFLOW_S3_SECRET_ACCESS_KEY=aqyn
#       - LANGFLOW_S3_BUCKET_NAME=aqyn-bucket

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - data_volume:/qdrant/data  # Qdrant data in subdirectory

  dagster-webserver:
    build:
      context: .
      dockerfile: ./dag/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PYTHONPATH=/opt/dagster/app
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_COLLECTION=aqyn
      - DAGSTER_HOME=/opt/dagster/dagster_home  # Add this line
    depends_on:
      - qdrant
    volumes:
      - dagster_home:/opt/dagster/dagster_home
    command: ["dagster-webserver", "-h", "0.0.0.0", "-p", "3000", "-w", "/opt/dagster/app/workspace.yaml"]

  dagster-daemon:
    build:
      context: .
      dockerfile: ./dag/Dockerfile
    environment:
      - DAGSTER_HOME=/opt/dagster/dagster_home
    depends_on:
      - dagster-webserver
    volumes: # Make docker client accessible so we can launch containers using host docker
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
      - dagster_home:/opt/dagster/dagster_home
    command: ["dagster-daemon", "run"]


  # minio:
  #   image: minio/minio:latest
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   environment:
  #     MINIO_ACCESS_KEY: aqyn
  #     MINIO_SECRET_KEY: aqyn
  #   volumes:
  #     - data_volume:/data/minio  # Minio data in subdirectory

volumes:
  data_volume:  # Single named volume
  dagster_home: